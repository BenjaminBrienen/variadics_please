[package]
name = "variadics_please"
version = "1.0.0"
edition = "2021"
description = "Implement things as if rust had variadics"
homepage = "https://github.com/bevyengine/variadics_please"
repository = "https://github.com/bevyengine/variadics_please"
license = "MIT OR Apache-2.0"
keywords = ["bevy", "variadics", "docs"]
rust-version = "1.65.0"
categories = ["macros", "utilities"]
exclude = ["tools/", ".github/", "variadics_please/"]
documentation = "https://docs.rs/variadics_please"

[features]
default = ["alloc"]
alloc = []

[lib]
proc-macro = true

[dependencies]
syn = "2.0"
quote = "1.0"
proc-macro2 = "1.0"

[workspace]
exclude = ["benches", "compile_fail", "tools/compile_fail_utils"]
members = ["errors"]

[workspace.lints.clippy]
doc_markdown = "warn"
manual_let_else = "warn"
match_same_arms = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
semicolon_if_nothing_returned = "warn"
type_complexity = "allow"
undocumented_unsafe_blocks = "warn"
unwrap_or_default = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
ref_as_ptr = "warn"
too_long_first_doc_paragraph = "allow"
std_instead_of_core = "warn"
std_instead_of_alloc = "warn"
alloc_instead_of_core = "warn"

[workspace.lints.rust]
missing_docs = "warn"
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(docsrs_dep)'] }
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_qualifications = "warn"
